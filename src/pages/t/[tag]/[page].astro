---
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";
import type { GetStaticPathsOptions } from "astro";
import PageHeader from "../../../components/page-header.astro";
import PageNavigator from "../../../components/page-navigator.astro";
import { pageSize, title } from "../../../consts/config";
import Layout from "../../../layouts/base-layout.astro";
import PostLayout from "../../../layouts/post-layout.astro";
import { hasTagsNoDrafts } from "../../../utils/filter";
import { getAllTags, getPostsByTag } from "../../../utils/get-posts";
import { byDate } from "../../../utils/sort";

type EntryProp = CollectionEntry<"posts">;

export const prerender = true;

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
	let allPosts = await getCollection("posts", hasTagsNoDrafts);
	allPosts = allPosts.sort(byDate);

	const allTags = getAllTags(allPosts);

	return allTags?.flatMap((tag) => {
		const filtered = getPostsByTag(allPosts, tag as string);
		return paginate(filtered, {
			params: { tag: tag as string },
			pageSize,
		});
	});
}

const { page } = Astro.props;
const { tag } = Astro.params;
---

<Layout
  title={`${title} - posts tagged #${tag}, page ${page.currentPage} of ${page.lastPage}`}
  permalink={`/t/${tag}/${page.currentPage}`}
>
  <PageHeader>Posts tagged #{tag}</PageHeader>
  {page.data.map((entry: EntryProp) => <PostLayout post={entry} />)}
  <PageNavigator page={page} />
</Layout>
