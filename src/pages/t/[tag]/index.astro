---
import Layout from '../../../layouts/base-layout.astro'
import PageHeader from '../../../components/page-header.astro'
import PageNavigator from '../../../components/page-navigator.astro'
import PostLayout from '../../../layouts/post-layout.astro'
import type { CollectionEntry } from 'astro:content'
import { byDate } from '../../../utils/sort'
import { getAllTags, getPostsByTag } from '../../../utils/get-posts'
import { getCollection } from 'astro:content'
import { hasTagsNoDrafts } from '../../../utils/filter'
import { pageSize, title } from '../../../consts/config'

type EntryProp = CollectionEntry<'posts'>

export async function getStaticPaths() {
  let allPosts = await getCollection('posts', hasTagsNoDrafts)
  allPosts = allPosts.sort(byDate)

  const allTags = getAllTags(allPosts)

  return allTags?.map(tag => {
    const filtered = getPostsByTag(allPosts, tag)
    return {
      params: {
        tag,
      },
      props: {
        pages: filtered,
      },
    }
  })
}

const { pages } = Astro.props
const { tag } = Astro.params
const lastPage = Math.ceil(pages.length / pageSize)
const page = {
  lastPage,
  url: {
    next: lastPage > 1 && `/t/${tag}/2`,
  },
}
---

<Layout
  title={`${title} - posts tagged #${tag}${
    lastPage > 1 ? ', page 1 of ' + lastPage : ''
  }`}
  permalink={`/t/${tag}`}
>
  <PageHeader>Posts tagged #{tag}</PageHeader>
  {
    pages
      .slice(0, pageSize)
      .map((entry: EntryProp) => <PostLayout post={entry} />)
  }
  <PageNavigator page={page} />
</Layout>
