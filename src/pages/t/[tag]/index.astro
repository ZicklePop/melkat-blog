---
import Layout from '../../../layouts/base-layout.astro'
import Article from '../../../components/article.astro'
import PageNavigator from '../../../components/page-navigator.astro'
import { byDate } from '../../../utils/sort'
import { pageSize } from '../../../consts/config'
import { uniq } from '../../../utils/uniques'
import getTags from '../../../utils/get-tags'

export async function getStaticPaths() {
  let allPosts = await Astro.fetchContent('../../p/*.md')
  allPosts = allPosts.filter(o => !o.draft).sort(byDate)

  let allTags = []
  allPosts.filter(o => !o.draft).forEach(({ tags }) => getTags(tags)?.forEach(tag => allTags.push(tag?.toLowerCase())))
  allTags = uniq(allTags)

  return allTags?.map(tag => {
    const filtered = allPosts.filter(o => getTags(o.tags)?.includes(tag))
    return {
      params: {
        tag
      },
      props: {
        pages: filtered
      }
    }
  })
}

const { pages } = Astro.props
const { tag } = Astro.request.params
const lastPage = Math.ceil(pages.length / pageSize)
const page = {
  lastPage,
  url: {
    next: lastPage > 1 && `/c/${tag}/2`,
  },
}
---
<Layout title={`melkat.blog - posts tagged #${tag}${lastPage > 1 ? ', page 1 of ' + lastPage : ''}`}>
  {pages.slice(0, pageSize).map(({ title, cover, link, domain, date, url, tags, type, content }) => <Article {title} {cover} {link} {domain} {date} {url} {tags} {type}><Fragment set:html={content.html}/></Article>)}
  <PageNavigator page={page} />
</Layout>
