---
import Layout from '../../../layouts/base-layout.astro'
import Article from '../../../components/article.astro'
import PageNavigator from '../../../components/page-navigator.astro'
import { byDate } from '../../../utils/sort'
import { pageSize } from '../../../consts/config'
import { uniqBy } from '../../../utils/uniques'

export async function getStaticPaths() {
  let allPosts = await Astro.glob('../../p/*.md')
  allPosts = allPosts.filter(o => !!o.type).filter(o => !o.draft).sort(byDate)

  const allTypes = uniqBy(allPosts, 'type').map(({ type }) => type)

  return allTypes?.map(type => {
    const filtered = allPosts.filter(o => o.type === type)
    return {
      params: {
        type
      },
      props: {
        pages: filtered
      }
    }
  })
}

const { pages } = Astro.props
const { type } = Astro.params
const lastPage = Math.ceil(pages.length / pageSize)
const page = {
  lastPage,
  url: {
    next: lastPage > 1 && `/c/${type}/2`,
  },
}
---
<Layout
  title={`melkat.blog - ${type} posts${lastPage > 1 ? ', page 1 of ' + lastPage : ''}`}
  permalink={`/c/${type}`}
>
  {pages.slice(0, pageSize).map(({ title, cover, link, domain, date, url, tags, type, content }) => <Article {title} {cover} {link} {domain} {date} {url} {tags} {type}><Fragment set:html={content.html}/></Article>)}
  <PageNavigator page={page} />
</Layout>
