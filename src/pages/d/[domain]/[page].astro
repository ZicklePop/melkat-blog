---
import Layout from '../../../layouts/base-layout.astro'
import PageHeader from '../../../components/page-header.astro'
import PageNavigator from '../../../components/page-navigator.astro'
import PostLayout from '../../../layouts/post-layout.astro'
import type { CollectionEntry } from 'astro:content'
import type { GetStaticPathsOptions } from 'astro'
import { byDate } from '../../../utils/sort'
import { getAllDomains, getPostsByDomain } from '../../../utils/get-posts'
import { getCollection } from 'astro:content'
import { hasLinkNoDrafts } from '../../../utils/filter'
import { pageSize, title } from '../../../consts/config'

export const prerender = true

type EntryProp = CollectionEntry<'posts'>

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  let allPosts = await getCollection('posts', hasLinkNoDrafts)
  allPosts = allPosts.sort(byDate)

  const allDomains = getAllDomains(allPosts)

  return allDomains?.flatMap(domain => {
    const filtered = getPostsByDomain(allPosts, domain)
    return paginate(filtered, {
      params: { domain },
      pageSize,
    })
  })
}

const { page } = Astro.props
const { domain } = Astro.params
---

<Layout
  title={`${title} - posts from #${domain}, page ${page.currentPage} of ${page.lastPage}`}
  permalink={`/d/${domain}/${page.currentPage}`}
>
  <PageHeader>Links to {domain}</PageHeader>
  {page.data.map((entry: EntryProp) => <PostLayout post={entry} />)}
  <PageNavigator page={page} />
</Layout>
