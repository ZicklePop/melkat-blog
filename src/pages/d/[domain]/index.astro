---
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";
import PageHeader from "@/src/components/page-header.astro";
import PageNavigator from "@/src/components/page-navigator.astro";
import { pageSize, title } from "@/src/consts/config";
import Layout from "@/src/layouts/base-layout.astro";
import PostLayout from "@/src/layouts/post-layout.astro";
import { hasLinkNoDrafts } from "@/src/lib/filter";
import { getAllDomains, getPostsByDomain } from "@/src/lib/get-posts";
import { byDate } from "@/src/lib/sort";

type EntryProp = CollectionEntry<"posts">;

export async function getStaticPaths() {
	let allPosts = await getCollection("posts", hasLinkNoDrafts);
	allPosts = allPosts.sort(byDate);

	const allDomains = getAllDomains(allPosts);

	return allDomains?.map((domain) => {
		const filtered = getPostsByDomain(allPosts, domain as string);
		return {
			params: {
				domain,
			},
			props: {
				pages: filtered,
			},
		};
	});
}

const { pages } = Astro.props;
const { domain } = Astro.params;
const lastPage = Math.ceil(pages.length / pageSize);
const page = {
	lastPage,
	url: {
		next: lastPage > 1 && `/d/${domain}/2`,
	},
};
---

<Layout
  title={`${title} - posts from #${domain}${
    lastPage > 1 ? ', page 1 of ' + lastPage : ''
  }`}
  permalink={`/d/${domain}`}
>
  <PageHeader>Linked posts to {domain}</PageHeader>
  {
    pages
      .slice(0, pageSize)
      .map((entry: EntryProp) => <PostLayout post={entry} />)
  }
  <PageNavigator page={page} />
</Layout>
